{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2018-06-26T21:31:00.857Z",
    "end": "2018-06-26T21:31:00.910Z",
    "duration": 53,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "47c7469b-1949-41ec-bd21-e61d4484035b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "e15445c6-1ee8-4379-b3a5-586e7974dbcb",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "9475846c-2e41-4603-ae6c-5aaaa6d80223",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "ba3d0392-2ab2-49db-a76d-0ef560914d85",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "8c029cc8-31bb-4de2-aee5-2a7d48fb9560",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "80a3be30-f5b3-4690-bb0f-4d8df6117160",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "acb85123-8d1a-4b11-b942-6eacbed44c42",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "c4436313-ada5-4cec-95bd-7d1cd9a7d41e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "ced69bc4-62f6-4379-942b-3e6a63d43b63",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ba3d0392-2ab2-49db-a76d-0ef560914d85",
          "8c029cc8-31bb-4de2-aee5-2a7d48fb9560",
          "80a3be30-f5b3-4690-bb0f-4d8df6117160",
          "acb85123-8d1a-4b11-b942-6eacbed44c42",
          "c4436313-ada5-4cec-95bd-7d1cd9a7d41e",
          "ced69bc4-62f6-4379-942b-3e6a63d43b63"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "77fe204f-79dd-4737-8423-ab838497dd3f",
        "title": "view/template/helper/concat",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "ad5a55ea-6b92-4930-acf8-985105db0617",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "67effb09-383c-4cb7-af55-1b1e647febbe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "db2e8735-6e53-4225-a530-260f9b54afe9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "67effb09-383c-4cb7-af55-1b1e647febbe",
          "db2e8735-6e53-4225-a530-260f9b54afe9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "2990dc67-1b15-429c-a470-7b4783d43f11",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "68642981-1acf-4dcc-b1e0-d33a83979404",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "c1ad230e-b43f-456b-9f72-e5c71a3cfa88",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c1ad230e-b43f-456b-9f72-e5c71a3cfa88"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a23b0ba4-1f02-4a08-8e08-5bb7c37efd54",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "e03f0ba8-0c30-4475-8c12-38e6d62aa775",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "918d6b44-28ac-4601-b378-5050db9436ea",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "918d6b44-28ac-4601-b378-5050db9436ea"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8d46ff3c-8380-45be-bc59-e6551d552751",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "94920d76-bdf6-4418-8f5e-d1aececa0898",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "e44ac125-1dd3-4e51-80d9-4286ed887dd9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e44ac125-1dd3-4e51-80d9-4286ed887dd9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "0add349d-1c47-42c0-a436-d8eee30f9178",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "b0758529-c455-4cc8-8187-d8031f7ab289",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "5a699225-623b-402a-aa45-7020a200fa7f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5a699225-623b-402a-aa45-7020a200fa7f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f06f002e-b6fa-49da-b436-c47e0dc6628a",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "5567126d-2203-47c3-ac4f-2122619bbc69",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "0a585ea2-47a2-4eee-bda0-2409d2064f77",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "98765778-3d6b-4f4a-9383-83b470476baf",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0a585ea2-47a2-4eee-bda0-2409d2064f77",
          "98765778-3d6b-4f4a-9383-83b470476baf"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "81d24eb0-ebf2-421d-80c2-9d9aedb04a90",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "5f76e186-0a51-469e-a2d3-c8730f06a612",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "d4d7f6aa-c423-4869-bd92-b5aafcd2dc6d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "f8323b1d-4a4e-4c5f-9cf6-c41fac823355",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "ad4f2346-84a8-44aa-a76d-18e251d5c18b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "7a7d4d0f-4486-4d65-adf4-565995923c03",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "ca6e8745-ca5b-4c6b-bc19-bcaf595ae087",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "19a548e6-3363-40b1-8e37-d6e90316df48",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d4d7f6aa-c423-4869-bd92-b5aafcd2dc6d",
          "f8323b1d-4a4e-4c5f-9cf6-c41fac823355",
          "ad4f2346-84a8-44aa-a76d-18e251d5c18b",
          "7a7d4d0f-4486-4d65-adf4-565995923c03",
          "ca6e8745-ca5b-4c6b-bc19-bcaf595ae087",
          "19a548e6-3363-40b1-8e37-d6e90316df48"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8bd88d0a-f057-479a-861b-6b4c56baa4b2",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "edf2a9c0-4ff1-4818-80fb-1dce37426964",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "bb4e4c61-e3f0-4174-af66-54abd3c6c67c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "bb4e4c61-e3f0-4174-af66-54abd3c6c67c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "aa3a4fdb-35da-4eb5-b4d5-4d4f100f8d81",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "f55bb5f5-d85a-4fcc-a65b-39cf00a1deba",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "754ad810-f28f-4d4e-8d96-03b7f29071a2",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "754ad810-f28f-4d4e-8d96-03b7f29071a2"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e45cd741-b519-43b7-b3f2-a458f27f0c92",
        "title": "view/handlebars",
        "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "a49a709d-e0da-43f5-8178-cb56671e3948",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "df7cb3b5-32cf-4c75-8639-fc76beb6d87e",
            "title": "static get handlebars",
            "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "4ac0353e-8a6f-4730-9822-b3906023a9e2",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4ac0353e-8a6f-4730-9822-b3906023a9e2"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "19c7f363-4231-424f-a4e8-d6d6ed577475",
            "title": "",
            "fullFile": "/home/superhero/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "view/handlebars \"before all\" hook",
                "timedOut": false,
                "duration": 28,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "const\nCore = require('@superhero/core'),\ncore = new Core({ view:{} })\nawait core.bootstrap(\n{\n  [__dirname] :\n  {\n    path      : __dirname,\n    partials  : { layout : 'test/layout' },\n    helpers   : { if : true }\n  }\n})\nhtml = await view.compose(\n{\n  template  : 'test/template',\n  body      :\n  {\n    foo : 'foobar',\n    i   : 5\n  }\n})",
                "err": {},
                "isRoot": true,
                "uuid": "67cb68b5-1af5-4997-a8e1-1bfed4053b58",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "possible to load template",
                "fullTitle": "view/handlebars possible to load template",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('loaded')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "02827824-b90c-438d-bd62-8c1e2ee82eda",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to read context variable",
                "fullTitle": "view/handlebars possible to read context variable",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('foobar')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "44d80a55-e070-4789-9ccd-670f1ad5b53c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to load a partial",
                "fullTitle": "view/handlebars possible to load a partial",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<head>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "a5935019-21dc-474a-9b78-6567b2785311",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"==\"",
                "fullTitle": "view/handlebars if helper \"==\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('==')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "4592e732-e094-4965-9416-9e016a13fe79",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"!=\"",
                "fullTitle": "view/handlebars if helper \"!=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('!=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "edcd3b15-f982-4ef4-a1d0-57d964bba31f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<\"",
                "fullTitle": "view/handlebars if helper \"<\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "dbd8ff9c-525d-4d3b-bae5-e0c5cd1ad236",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<=\"",
                "fullTitle": "view/handlebars if helper \"<=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "31377e29-f78c-4ebb-8e69-4a3ee7407a3c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">\"",
                "fullTitle": "view/handlebars if helper \">\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "8e610e79-fe0f-4275-8cc9-88ac80346df0",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">=\"",
                "fullTitle": "view/handlebars if helper \">=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "e5a458df-ddc5-4a4e-8e44-1719d37afaf4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"&&\"",
                "fullTitle": "view/handlebars if helper \"&&\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('&&')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "29564459-26fc-4439-a64e-7f76d6abd2b6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"||\"",
                "fullTitle": "view/handlebars if helper \"||\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('||')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "fecb27cc-196b-429c-94fb-1ef64430bf00",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"typeof\"",
                "fullTitle": "view/handlebars if helper \"typeof\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('typeof')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "35094122-f720-4898-879d-a90de850b23b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "02827824-b90c-438d-bd62-8c1e2ee82eda",
              "44d80a55-e070-4789-9ccd-670f1ad5b53c",
              "a5935019-21dc-474a-9b78-6567b2785311",
              "4592e732-e094-4965-9416-9e016a13fe79",
              "edcd3b15-f982-4ef4-a1d0-57d964bba31f",
              "dbd8ff9c-525d-4d3b-bae5-e0c5cd1ad236",
              "31377e29-f78c-4ebb-8e69-4a3ee7407a3c",
              "8e610e79-fe0f-4275-8cc9-88ac80346df0",
              "e5a458df-ddc5-4a4e-8e44-1719d37afaf4",
              "29564459-26fc-4439-a64e-7f76d6abd2b6",
              "fecb27cc-196b-429c-94fb-1ef64430bf00",
              "35094122-f720-4898-879d-a90de850b23b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}