{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2018-07-27T16:08:17.254Z",
    "end": "2018-07-27T16:08:17.297Z",
    "duration": 43,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "becd6143-d0cd-4455-add8-57ff812ca57a",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "946eee22-586b-41a5-b278-0783c83e5abc",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "18f86073-46dc-49c1-b7d2-c0778f1b0135",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "19c6311d-31bf-4370-963f-e158508df0b7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "0ac63bc3-363c-46e6-be0d-05be4197eb05",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "08448a39-3e23-44d2-99c8-82a7ff132b4d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "69532a29-030f-40bc-91bf-8a92f1dd4b3f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "704c3c54-360e-4408-bea3-51c7a647f4d9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "abe927ef-117d-484a-bf06-c66878c00776",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "19c6311d-31bf-4370-963f-e158508df0b7",
          "0ac63bc3-363c-46e6-be0d-05be4197eb05",
          "08448a39-3e23-44d2-99c8-82a7ff132b4d",
          "69532a29-030f-40bc-91bf-8a92f1dd4b3f",
          "704c3c54-360e-4408-bea3-51c7a647f4d9",
          "abe927ef-117d-484a-bf06-c66878c00776"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "0622d228-cc7e-4203-83be-0bbb1b757b5c",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "2baf835e-3832-4251-a454-0f8551907a2f",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "9627eba2-3d9c-42f2-b5b4-644ea4f42d7e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "8bf6a461-3cab-4de7-9da7-c2732c5b0f18",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9627eba2-3d9c-42f2-b5b4-644ea4f42d7e",
          "8bf6a461-3cab-4de7-9da7-c2732c5b0f18"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "5d056378-cf8b-468d-8095-d4c4c2120480",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "6bbeac80-51d9-49c0-b698-ad95c02c22b4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "cc5049ef-d5ee-4a62-b638-ae89baff2e29",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "cc5049ef-d5ee-4a62-b638-ae89baff2e29"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "30ff3690-540b-4092-adf0-f97dbeee429e",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "581ef18e-b57e-4849-89e4-d5dd36cc5177",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "7c5fcea0-f1ad-4255-945c-3f7a4a138f70",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7c5fcea0-f1ad-4255-945c-3f7a4a138f70"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f1d06469-6452-487b-b05b-b5adf2ed1598",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "73c156f7-9fcf-4f6a-af9b-a13576e55590",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "718b3e8f-7fb1-43eb-821b-cb36137f9892",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "718b3e8f-7fb1-43eb-821b-cb36137f9892"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c5bd18f0-934e-47bf-b907-06a8ed397583",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "d8076687-8b9c-4b1f-9026-cdacf39931f5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "3cb19fa1-92da-4357-b8a6-b2787cc09330",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3cb19fa1-92da-4357-b8a6-b2787cc09330"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "66253593-9722-44dc-b449-abfffe026393",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "733b94d5-1d44-48bf-8ce0-7517ff95f370",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "54ca1111-65ef-474c-ac7e-1f306a11ffb3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "8614439e-526d-4ae5-9d90-30792573db00",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "54ca1111-65ef-474c-ac7e-1f306a11ffb3",
          "8614439e-526d-4ae5-9d90-30792573db00"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "69e7a995-ccb2-4565-a228-742774b68464",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "393a7a44-c01a-4b83-9cce-0a347fb85825",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "bfe2c099-0c13-4412-9b39-5b96f91fdacc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "045aa00e-86c4-4145-8498-319ca32d231d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "52d3bbd8-9b79-4b66-b7d9-09d848cc082b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "3fa73661-2643-4740-888d-a4cb585667ea",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "2a776e75-9e2d-4f1c-921f-238dbed9d5dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "3590f69d-b3ff-438d-939a-26dc36ea539a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "bfe2c099-0c13-4412-9b39-5b96f91fdacc",
          "045aa00e-86c4-4145-8498-319ca32d231d",
          "52d3bbd8-9b79-4b66-b7d9-09d848cc082b",
          "3fa73661-2643-4740-888d-a4cb585667ea",
          "2a776e75-9e2d-4f1c-921f-238dbed9d5dd",
          "3590f69d-b3ff-438d-939a-26dc36ea539a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a5e737cb-8732-4111-884b-1c87951923c2",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "13de6f7b-2379-44f0-a185-a88526fa9267",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "5a1c1c1e-c8b3-491a-bd62-6a6be23c3895",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5a1c1c1e-c8b3-491a-bd62-6a6be23c3895"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "92ad5a33-82a7-4935-ade9-f73ac9fbf4b9",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "a4c341ca-441c-49dc-b75e-c3ac5fa5be50",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "0a5b591b-3ccd-4e2f-9673-76ef4631a1d7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0a5b591b-3ccd-4e2f-9673-76ef4631a1d7"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d16ef232-bbed-4614-be07-c5f07b5eaf13",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "b05c8607-fb59-472d-a16c-f223b20f5904",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "76667ff9-7adb-4a98-aeac-d75a7440a86d",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "92783266-fbbd-42e5-ab0d-a8bb5a4d818c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "92783266-fbbd-42e5-ab0d-a8bb5a4d818c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "24c7e3f2-fc98-4a87-a4a9-c09f1af47eed",
            "title": "",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "view/handlebars \"before all\" hook",
                "timedOut": false,
                "duration": 19,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "const\nCore = require('@superhero/core'),\ncore = new Core({ view:{} })\nawait core.bootstrap(\n{\n  [__dirname] :\n  {\n    path      : __dirname,\n    partials  : { layout : 'test/layout' },\n    helpers   : { if : true }\n  }\n})\nhtml = await view.compose(\n{\n  template  : 'test/template',\n  body      :\n  {\n    foo : 'foobar',\n    i   : 5\n  }\n})",
                "err": {},
                "isRoot": true,
                "uuid": "a0bb3fb0-7b5f-4463-81fb-920f3f18d80b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "possible to load template",
                "fullTitle": "view/handlebars possible to load template",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('loaded')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "7f4c8c9c-60f3-4636-899b-9e7cad7eb570",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to read context variable",
                "fullTitle": "view/handlebars possible to read context variable",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('foobar')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "367da7d1-454f-4f0d-89f4-7b5831c896f5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to load a partial",
                "fullTitle": "view/handlebars possible to load a partial",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<head>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "69005236-3dee-48f8-8692-25699013fae6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"==\"",
                "fullTitle": "view/handlebars if helper \"==\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('==')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "278d2bdf-341f-455e-8c97-fe1ed52b1ca3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"!=\"",
                "fullTitle": "view/handlebars if helper \"!=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('!=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "d1e56ece-895e-4523-a268-bb509c56108a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<\"",
                "fullTitle": "view/handlebars if helper \"<\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "a14a76ec-3dcf-4f11-92bd-240b28f02351",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<=\"",
                "fullTitle": "view/handlebars if helper \"<=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "75bfd20f-3de8-4f43-adf8-c2a7acb217e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">\"",
                "fullTitle": "view/handlebars if helper \">\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "98a08707-a86a-4a2a-afde-ca152d980c46",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">=\"",
                "fullTitle": "view/handlebars if helper \">=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "6e07b9ee-1633-42c9-bf15-b94b0a438063",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"&&\"",
                "fullTitle": "view/handlebars if helper \"&&\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('&&')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "506e0738-fc86-4771-bbff-41a7336f6741",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"||\"",
                "fullTitle": "view/handlebars if helper \"||\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('||')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "11084a1e-3229-4d0c-be30-1a65423e2cef",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"typeof\"",
                "fullTitle": "view/handlebars if helper \"typeof\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('typeof')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "895135a9-0acb-49ed-b251-a8a796bb1de1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7f4c8c9c-60f3-4636-899b-9e7cad7eb570",
              "367da7d1-454f-4f0d-89f4-7b5831c896f5",
              "69005236-3dee-48f8-8692-25699013fae6",
              "278d2bdf-341f-455e-8c97-fe1ed52b1ca3",
              "d1e56ece-895e-4523-a268-bb509c56108a",
              "a14a76ec-3dcf-4f11-92bd-240b28f02351",
              "75bfd20f-3de8-4f43-adf8-c2a7acb217e2",
              "98a08707-a86a-4a2a-afde-ca152d980c46",
              "6e07b9ee-1633-42c9-bf15-b94b0a438063",
              "506e0738-fc86-4771-bbff-41a7336f6741",
              "11084a1e-3229-4d0c-be30-1a65423e2cef",
              "895135a9-0acb-49ed-b251-a8a796bb1de1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}