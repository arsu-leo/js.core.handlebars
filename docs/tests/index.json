{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2018-07-27T14:40:03.659Z",
    "end": "2018-07-27T14:40:03.701Z",
    "duration": 42,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "f239e063-dd66-4256-9648-cfa02cda4df8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "19a390f0-3179-41d9-8094-e4de01754d3e",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "ad2a52ea-6fc9-498a-85b6-9b7c3aadfda1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "d22833be-8361-4177-8e16-0b56769a1656",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "4ebde9dd-a3ef-486f-9c45-3a0dc50bca4a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "85f5fcc9-8b17-4d00-a74f-be45f6fdb2d9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "e5924327-ecb4-47ff-9e1d-fb683175d607",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "ba5a38e3-b70e-499f-9cb0-e2630863d014",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "5ba5d642-126a-4895-9b3d-dd3c07495aab",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d22833be-8361-4177-8e16-0b56769a1656",
          "4ebde9dd-a3ef-486f-9c45-3a0dc50bca4a",
          "85f5fcc9-8b17-4d00-a74f-be45f6fdb2d9",
          "e5924327-ecb4-47ff-9e1d-fb683175d607",
          "ba5a38e3-b70e-499f-9cb0-e2630863d014",
          "5ba5d642-126a-4895-9b3d-dd3c07495aab"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "eb96750d-2e81-4fd8-b223-c26c2dafc1f8",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "c7117dc0-f6d3-497a-914e-e523bce76e0a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "b6cbbd8e-5fa3-49d4-911e-7328b489e9b4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "b8773e8b-74a6-44fe-b863-52e60a32a252",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b6cbbd8e-5fa3-49d4-911e-7328b489e9b4",
          "b8773e8b-74a6-44fe-b863-52e60a32a252"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "5f8742b8-4c4c-435a-a273-01a1428a2dd2",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "a9ce4f17-d16b-414b-9d80-e5a7c923dfbc",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "fa4df00f-a49e-4b73-9950-ef2e9078d882",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fa4df00f-a49e-4b73-9950-ef2e9078d882"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d067521a-5f76-4a95-8a36-d19bda4fa7fc",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "6598e795-a56e-4165-b22a-b58dd8232dea",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "908a4524-6c55-49f0-90a1-ddb26fe2503c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "908a4524-6c55-49f0-90a1-ddb26fe2503c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "139cb5b5-39f3-4838-81e0-d2b212cb9d87",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "3a73d782-5f68-478b-8bf4-24730e1d9a85",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "e380c922-10c7-4da6-8fca-155815eb079c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e380c922-10c7-4da6-8fca-155815eb079c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fa0cf7ba-a538-4389-919a-9d583abc8cf5",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "cc10da37-6397-4e50-90b4-504e316514b5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "5cf247f0-bce0-4e0b-bae9-fb7430140d45",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5cf247f0-bce0-4e0b-bae9-fb7430140d45"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8d1dab72-535b-47f1-a498-b44e93ce9645",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "2bdb7dd9-f278-434f-a811-e4d16f2ddf0b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "0947a857-6fec-415d-9d15-9538dad75cf7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "93537a0c-9aba-44e2-96f1-fdda3d713516",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0947a857-6fec-415d-9d15-9538dad75cf7",
          "93537a0c-9aba-44e2-96f1-fdda3d713516"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "10555850-4c98-49fd-bd8d-b8736f191629",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "2217db7f-5b67-4781-8072-3eab4dcb36cc",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "6b694bcc-2afc-40a7-a074-1c244f3df2bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "2d3aaf27-020b-4ab2-b684-301a680ff6cd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "aa3fcfdf-309a-417d-a130-40d58567947c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "0c68ae31-76c9-4bc9-ab3c-7f57aa900833",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "074a3a46-ea10-44fb-8d7f-09f1884f556e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "d6018477-7962-4e1b-ba42-c41b8eeb4c7a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6b694bcc-2afc-40a7-a074-1c244f3df2bb",
          "2d3aaf27-020b-4ab2-b684-301a680ff6cd",
          "aa3fcfdf-309a-417d-a130-40d58567947c",
          "0c68ae31-76c9-4bc9-ab3c-7f57aa900833",
          "074a3a46-ea10-44fb-8d7f-09f1884f556e",
          "d6018477-7962-4e1b-ba42-c41b8eeb4c7a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3ef0bb0e-879b-45ca-b3c8-30c6b750a212",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "e10a7121-3174-46d4-9e1f-32960bf97feb",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "fe20e5e9-8ab4-4dd9-8bbb-174c6ea8980d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fe20e5e9-8ab4-4dd9-8bbb-174c6ea8980d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3e691b3a-6f13-4abc-b664-f6f4c3a13ee2",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "c945a25f-5968-452e-8d69-d7784da08133",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "7cb0de9d-6e66-48c3-a5d8-fc05df91a91b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7cb0de9d-6e66-48c3-a5d8-fc05df91a91b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "63e3f6aa-383a-4bc6-9473-962918014067",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "1340cb19-f47b-40d0-b83e-d76f338147b9",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c8269df3-d645-4ced-af33-629d4c4dc9e5",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "e840968d-043c-4f10-b5ed-60d653840b39",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e840968d-043c-4f10-b5ed-60d653840b39"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "65772d07-9d99-432a-8f31-9c215bd55c86",
            "title": "",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "view/handlebars \"before all\" hook",
                "timedOut": false,
                "duration": 19,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "const\nCore = require('@superhero/core'),\ncore = new Core({ view:{} })\nawait core.bootstrap(\n{\n  [__dirname] :\n  {\n    path      : __dirname,\n    partials  : { layout : 'test/layout' },\n    helpers   : { if : true }\n  }\n})\nhtml = await view.compose(\n{\n  template  : 'test/template',\n  body      :\n  {\n    foo : 'foobar',\n    i   : 5\n  }\n})",
                "err": {},
                "isRoot": true,
                "uuid": "98a247d8-7ec0-4e5b-ac9b-39cb0a54c767",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "possible to load template",
                "fullTitle": "view/handlebars possible to load template",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('loaded')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "38d86071-e97c-4b36-a396-b47eedc985ea",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to read context variable",
                "fullTitle": "view/handlebars possible to read context variable",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('foobar')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "1dae661c-d0d8-4382-9d0a-ece5a37822bd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to load a partial",
                "fullTitle": "view/handlebars possible to load a partial",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<head>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "a185d312-e3c0-489a-bc44-d3b8b1ae32d4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"==\"",
                "fullTitle": "view/handlebars if helper \"==\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('==')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "391f988e-1173-4b45-a4cb-cbca16460bf4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"!=\"",
                "fullTitle": "view/handlebars if helper \"!=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('!=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "3334d615-4c11-4c40-b92b-9ed6f3b21a33",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<\"",
                "fullTitle": "view/handlebars if helper \"<\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "7d692121-0727-4159-a83c-e4264877318b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<=\"",
                "fullTitle": "view/handlebars if helper \"<=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "ccb94b05-e758-4594-940c-323107286d3f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">\"",
                "fullTitle": "view/handlebars if helper \">\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "c0a90661-69e4-4d65-af9f-9a106d5a4a3f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">=\"",
                "fullTitle": "view/handlebars if helper \">=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "2d2697f9-88d2-4edc-af30-c6b8de919d53",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"&&\"",
                "fullTitle": "view/handlebars if helper \"&&\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('&&')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "aca7c103-11a5-4c28-89e3-32dcb635f27a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"||\"",
                "fullTitle": "view/handlebars if helper \"||\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('||')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "7dabbd8c-c33f-4612-a8fa-28ba1884aab8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"typeof\"",
                "fullTitle": "view/handlebars if helper \"typeof\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('typeof')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "ffe79690-3ed5-4663-bf88-bcd74ce0a08d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "38d86071-e97c-4b36-a396-b47eedc985ea",
              "1dae661c-d0d8-4382-9d0a-ece5a37822bd",
              "a185d312-e3c0-489a-bc44-d3b8b1ae32d4",
              "391f988e-1173-4b45-a4cb-cbca16460bf4",
              "3334d615-4c11-4c40-b92b-9ed6f3b21a33",
              "7d692121-0727-4159-a83c-e4264877318b",
              "ccb94b05-e758-4594-940c-323107286d3f",
              "c0a90661-69e4-4d65-af9f-9a106d5a4a3f",
              "2d2697f9-88d2-4edc-af30-c6b8de919d53",
              "aca7c103-11a5-4c28-89e3-32dcb635f27a",
              "7dabbd8c-c33f-4612-a8fa-28ba1884aab8",
              "ffe79690-3ed5-4663-bf88-bcd74ce0a08d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}