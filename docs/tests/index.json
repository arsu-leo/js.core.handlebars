{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2018-06-14T12:39:56.594Z",
    "end": "2018-06-14T12:39:56.634Z",
    "duration": 40,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "31d45033-f44e-4a31-8fce-f54ad6a69c90",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "96a01e95-e93c-4129-98e8-9f5145b84e9f",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "657e2878-6ff0-477b-8960-330f31ca88c4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "98eff64d-0b3a-4a69-a087-71fd669ccf7e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "563a77cf-cec4-4528-85a2-dbec619b4ca5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "1853cd62-4897-48d3-9713-440222b9d8cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "779058b4-8702-4044-95ec-9b448040a6da",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "d3cef5fe-f37f-4ac9-8525-338e44b7951c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "b41a47dd-9594-4d9c-9f42-4ba517482865",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "98eff64d-0b3a-4a69-a087-71fd669ccf7e",
          "563a77cf-cec4-4528-85a2-dbec619b4ca5",
          "1853cd62-4897-48d3-9713-440222b9d8cc",
          "779058b4-8702-4044-95ec-9b448040a6da",
          "d3cef5fe-f37f-4ac9-8525-338e44b7951c",
          "b41a47dd-9594-4d9c-9f42-4ba517482865"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "27101561-4d19-44e9-884b-48c22be85687",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "677a65d6-c484-4d1e-9a02-4ff01092b1d7",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "3d7dc2c7-605a-4257-a9a9-3871e92b2863",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "3ddc92bf-66cb-43d5-a0dc-eabd5681f12a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3d7dc2c7-605a-4257-a9a9-3871e92b2863",
          "3ddc92bf-66cb-43d5-a0dc-eabd5681f12a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "00213971-a2a5-45a4-b2b0-3c568ab00b38",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "465abd03-294b-4c5d-bdf0-f10c75da53a5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "401ac557-be8c-44c9-b719-15781dc2321f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "401ac557-be8c-44c9-b719-15781dc2321f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "2f290517-feed-4266-8a18-9adb93b65b22",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "124d4231-b4fe-40f7-b3b3-06cd7dbb99eb",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "b8932e0b-ef3f-4327-bdf2-c57e741267b4",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b8932e0b-ef3f-4327-bdf2-c57e741267b4"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "28539f72-840d-498d-b28f-c0c2630db6c0",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "31f97d27-bc0a-4004-bafa-104288e9c031",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "4839bc69-6568-45d4-9911-3c5ca8cf256b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4839bc69-6568-45d4-9911-3c5ca8cf256b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c2b5dc7a-79da-4b48-9fc0-7fcdf08bbb10",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "a94b8111-e4e0-421d-b649-d7e00bf7a771",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "31b8155b-63a4-4124-9a7f-7ea50feb4d46",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "31b8155b-63a4-4124-9a7f-7ea50feb4d46"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "cab464af-c73c-42be-8aa9-2321cf5a98ec",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "8b40d2e0-bebc-4082-9205-ffadf5d1051b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "2a0b5738-4f3c-4812-b8bf-6ef89d5cfe09",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "3c0a42fe-1bf4-4d84-851c-486f2b80c259",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2a0b5738-4f3c-4812-b8bf-6ef89d5cfe09",
          "3c0a42fe-1bf4-4d84-851c-486f2b80c259"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "21620e75-9c35-4cc5-b453-988973481fc2",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "ae01184f-4d17-482e-b969-ebab93f14795",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "5647f870-2893-48a9-820c-e07910223501",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "2cad23d0-b5c1-470d-8190-b5f5c142a4f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "28313505-9a02-4ed7-a22c-dc4d0d2c2ef6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "52152704-c249-47b0-8aa6-5e93aff03fc5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "ea7e87d7-058e-454f-8795-0b71255b5a16",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "5ad05f94-d645-47b2-9834-65bec960fe4a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5647f870-2893-48a9-820c-e07910223501",
          "2cad23d0-b5c1-470d-8190-b5f5c142a4f0",
          "28313505-9a02-4ed7-a22c-dc4d0d2c2ef6",
          "52152704-c249-47b0-8aa6-5e93aff03fc5",
          "ea7e87d7-058e-454f-8795-0b71255b5a16",
          "5ad05f94-d645-47b2-9834-65bec960fe4a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a55e10ca-de95-4c11-8f31-5e603d3347b7",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "bb6e35e6-d289-4886-bf20-8aeb63dcd334",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "ca360b78-f96f-4e89-872e-16b18f533bec",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ca360b78-f96f-4e89-872e-16b18f533bec"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "574545e2-4917-4a4c-a1e8-7761b88cd73e",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "991e68e6-7996-4348-8687-ded187dc700c",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "394c969e-08c4-4b33-95a9-0498e4f19a41",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "394c969e-08c4-4b33-95a9-0498e4f19a41"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "bf8138c5-74e1-4939-a0d6-8e7d194d8616",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "e9fe37b8-4953-4d14-affc-5faa9955f569",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "b1c91d8e-a24c-44f6-ab09-41cda9460cb1",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "ee0be3a7-a8eb-454e-9d73-403ae8b7a45c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ee0be3a7-a8eb-454e-9d73-403ae8b7a45c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "6f37e2dd-4da0-4db1-b5cc-8cfd649bc7a4",
            "title": "",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "view/handlebars \"before all\" hook",
                "timedOut": false,
                "duration": 18,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "await require('./bootstrap')(\n{\n  path      : __dirname,\n  partials  : { layout : 'test/layout' },\n  helpers   : { if : true }\n},\n{\n  view : {}\n})\nhtml = await view.compose(\n{\n  template  : 'test/template',\n  body      :\n  {\n    foo : 'foobar',\n    i   : 5\n  }\n})",
                "err": {},
                "isRoot": true,
                "uuid": "3b71402c-d79a-46c8-9aed-e3f3a2a5519b",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "possible to load template",
                "fullTitle": "view/handlebars possible to load template",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('loaded')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "6074aa74-c830-4f12-b650-9a12be314e24",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to read context variable",
                "fullTitle": "view/handlebars possible to read context variable",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('foobar')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "406d749a-5df6-4517-b7f4-f23fc4779459",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to load a partial",
                "fullTitle": "view/handlebars possible to load a partial",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<head>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "ce934559-88dd-41d3-9707-05fb272460f9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"==\"",
                "fullTitle": "view/handlebars if helper \"==\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('==')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "673e6bbc-1ab4-4c5b-b068-1df6eddfa63a",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"!=\"",
                "fullTitle": "view/handlebars if helper \"!=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('!=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "12b4faed-4773-474a-a14d-182607f68188",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<\"",
                "fullTitle": "view/handlebars if helper \"<\"",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "d77bf7ca-7917-42bb-9f8a-53340664ab2b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<=\"",
                "fullTitle": "view/handlebars if helper \"<=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "4ec3074f-9f39-4626-a8f1-8aaa268852d1",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">\"",
                "fullTitle": "view/handlebars if helper \">\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "47bb64ca-ffde-4fb5-8211-36f6353609d8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">=\"",
                "fullTitle": "view/handlebars if helper \">=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "adf254f5-ca0c-45f9-843a-68cd74259444",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"&&\"",
                "fullTitle": "view/handlebars if helper \"&&\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('&&')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "8da0c71d-3c12-420a-ac26-53720847e66d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"||\"",
                "fullTitle": "view/handlebars if helper \"||\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('||')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "10b73257-6dc2-403f-9184-d8334923ef72",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"typeof\"",
                "fullTitle": "view/handlebars if helper \"typeof\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('typeof')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "8a544332-0248-4db3-a816-4b43dc686b35",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6074aa74-c830-4f12-b650-9a12be314e24",
              "406d749a-5df6-4517-b7f4-f23fc4779459",
              "ce934559-88dd-41d3-9707-05fb272460f9",
              "673e6bbc-1ab4-4c5b-b068-1df6eddfa63a",
              "12b4faed-4773-474a-a14d-182607f68188",
              "d77bf7ca-7917-42bb-9f8a-53340664ab2b",
              "4ec3074f-9f39-4626-a8f1-8aaa268852d1",
              "47bb64ca-ffde-4fb5-8211-36f6353609d8",
              "adf254f5-ca0c-45f9-843a-68cd74259444",
              "8da0c71d-3c12-420a-ac26-53720847e66d",
              "10b73257-6dc2-403f-9184-d8334923ef72",
              "8a544332-0248-4db3-a816-4b43dc686b35"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}