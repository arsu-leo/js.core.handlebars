{
  "stats": {
    "suites": 12,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-16T12:40:49.663Z",
    "end": "2018-05-16T12:40:49.708Z",
    "duration": 45,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "20f659c6-9e9d-4af1-b8d1-875067905130",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "795c1f32-70f9-4d7c-9578-250fa783f975",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "a501aea7-93ef-47ea-9305-62b3d1f124e1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "06dc2a53-e0e5-4c20-a2aa-54f567af73a5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "24d0293f-4726-4fed-a603-288dafa52608",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "7481497d-1177-47be-95d9-1ca49d74cdd2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "921375f0-764b-41b7-8ce4-ee23d00570d2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "a9f21744-29ec-481f-b459-9eb7461fc30a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "67c62463-cf70-4e08-9a9e-2205c206a99c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "06dc2a53-e0e5-4c20-a2aa-54f567af73a5",
          "24d0293f-4726-4fed-a603-288dafa52608",
          "7481497d-1177-47be-95d9-1ca49d74cdd2",
          "921375f0-764b-41b7-8ce4-ee23d00570d2",
          "a9f21744-29ec-481f-b459-9eb7461fc30a",
          "67c62463-cf70-4e08-9a9e-2205c206a99c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "18d412d3-e984-46c5-81c1-1dd5ce9b6c3e",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "ad6f4c1b-2d66-49f9-b6f7-58c622b03629",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "7ca77204-4e7d-4523-8a1d-b70ea150ee91",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "6b669122-1511-47b0-9fb8-e850e08f08e0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7ca77204-4e7d-4523-8a1d-b70ea150ee91",
          "6b669122-1511-47b0-9fb8-e850e08f08e0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ecbf0981-22b6-4c3a-805b-d4de8313a16f",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "d280236e-37f7-49cc-bad6-2531c3baf950",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "96f7a9a9-c271-4ba2-b929-3e4f4ec2be73",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "96f7a9a9-c271-4ba2-b929-3e4f4ec2be73"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "053b6de1-3831-4d49-9925-5911ff0e1147",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "0a405916-dbef-4a4b-9f89-88eb19aa9dbb",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "ce34caa8-f6c2-4413-a3fc-287a191baf44",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ce34caa8-f6c2-4413-a3fc-287a191baf44"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7d3788b7-6984-47c9-8f28-dd0143b50a9b",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "800309bf-ada9-4717-aa72-13ca732f998a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "09232ceb-561b-4193-b583-ad90c646bc2c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "09232ceb-561b-4193-b583-ad90c646bc2c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4901821c-5ee1-424e-a26a-71bb28dd77a7",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "5117f96c-53a5-4a69-aac9-214a4df0874b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "91ac5d73-1823-4823-b604-426d00eb20e6",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "91ac5d73-1823-4823-b604-426d00eb20e6"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "0d8810b5-766e-47bb-a9d3-95308a0c4975",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "40c7ec79-43a4-45d4-bf21-d85ab5b0df69",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "183f6138-362a-405a-8d22-6170994bc1ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "52ea89ec-8316-4e81-bd3f-009f4c0428d5",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "183f6138-362a-405a-8d22-6170994bc1ae",
          "52ea89ec-8316-4e81-bd3f-009f4c0428d5"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "04014f4e-e4e0-42d7-a6a7-c7b2bbd5913d",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "e7d5cab2-e160-461f-ab73-161cf7db1c03",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "47d4a038-05c7-4de9-9609-a7a099488ffb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "b4eab642-9aa8-4ee5-bda4-877d6bc16f22",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "f00cb2dc-b405-47fd-984a-e10eadebe80f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "05d51930-cbe6-4301-be4b-1d74b9c3b08d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "b44baa93-b012-46d7-8120-b8906545006b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "167dc3dc-202b-42ee-8e62-62d4c7272aad",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "47d4a038-05c7-4de9-9609-a7a099488ffb",
          "b4eab642-9aa8-4ee5-bda4-877d6bc16f22",
          "f00cb2dc-b405-47fd-984a-e10eadebe80f",
          "05d51930-cbe6-4301-be4b-1d74b9c3b08d",
          "b44baa93-b012-46d7-8120-b8906545006b",
          "167dc3dc-202b-42ee-8e62-62d4c7272aad"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "64a4955d-9b53-4847-bc59-40dd5180c05f",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "fd0a51f9-d7a6-4ce9-8da6-24877496ba14",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "f584a955-efc8-4619-af41-bc839eea59bf",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f584a955-efc8-4619-af41-bc839eea59bf"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "07542437-496d-4d65-baab-bc3ec2b1ecb2",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "b4cc58a1-c58d-4880-b4d6-75962d7990cf",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "55302407-a760-4821-a939-9e6b300383ab",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "55302407-a760-4821-a939-9e6b300383ab"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "aeace6bd-6468-493c-9cda-c23e40def429",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "1fe29d7f-84c3-4521-9506-830fc6cfb0bb",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c8092ed1-e77e-400e-bac4-e7da76cdcc73",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(require('handlebars'))",
                "err": {},
                "isRoot": false,
                "uuid": "b515c5d5-9694-41ff-9f72-f75b3f3b30a1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b515c5d5-9694-41ff-9f72-f75b3f3b30a1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 24,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}