{
  "stats": {
    "suites": 12,
    "tests": 35,
    "passes": 35,
    "pending": 0,
    "failures": 0,
    "start": "2018-06-20T16:42:55.595Z",
    "end": "2018-06-20T16:42:55.637Z",
    "duration": 42,
    "testsRegistered": 35,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "ec576415-3edd-4b5b-9791-c6cba87c2513",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "2d89b9c6-996c-4cbe-b65f-0a8f55f057e3",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "12789357-d039-4f31-8289-58a1792694d6",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "6ec361c0-7336-40f8-8bcf-0d3cb6112552",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "1eccd9ed-fd65-45e2-92b6-2d685fde47b1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "9ac0e332-7c4c-4c48-b896-d25a5cf0846f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "a8edc069-d985-4ad5-8dc6-adc2b50ea283",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "f899f98a-d2cb-4fc3-a9bb-06ceb2591ca4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "21f10273-d27f-46ac-8e79-626eb7ffdad9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6ec361c0-7336-40f8-8bcf-0d3cb6112552",
          "1eccd9ed-fd65-45e2-92b6-2d685fde47b1",
          "9ac0e332-7c4c-4c48-b896-d25a5cf0846f",
          "a8edc069-d985-4ad5-8dc6-adc2b50ea283",
          "f899f98a-d2cb-4fc3-a9bb-06ceb2591ca4",
          "21f10273-d27f-46ac-8e79-626eb7ffdad9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "044b9dc8-5fb7-4038-aa14-d0caeb8de6fb",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "ae10a2a1-c6cb-4736-81a2-a6d64a37fce8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "4a81d5ba-bf87-4313-b560-9acb2da69bc5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "b863cf2c-2743-4582-84b6-09e818b01e66",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4a81d5ba-bf87-4313-b560-9acb2da69bc5",
          "b863cf2c-2743-4582-84b6-09e818b01e66"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e3a34de5-3b6b-467d-bb5c-b05298834aa3",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "26199c49-6fce-4bd7-bbea-759a19a63967",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "ab1500d6-e4ed-4c33-8636-deb127178787",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ab1500d6-e4ed-4c33-8636-deb127178787"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "76f01524-0d9a-4499-95a5-2bbeb0109a38",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "da45d8c4-2f33-4e58-8cce-bb013085ed90",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "e99eefb0-19f8-43a8-8add-dd494c2bb8cb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e99eefb0-19f8-43a8-8add-dd494c2bb8cb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4df329cb-8295-4394-ad10-c25b39ba3cec",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "4a780270-51c9-43fe-b626-bbbad432f5f1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "4bdb85e5-2bb5-4a80-ad1d-7f74e4b6e8eb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4bdb85e5-2bb5-4a80-ad1d-7f74e4b6e8eb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "52a9a521-3791-42db-aa4f-f22e7b835c45",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "38141967-4674-4854-81e0-e6203633f7f4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "6ca03d53-e03b-46a2-aa23-59be1755bc94",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6ca03d53-e03b-46a2-aa23-59be1755bc94"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3dfef447-84c0-4f4c-9e29-6503e3124f44",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "5f1dcdd7-9f95-43b8-8c64-c5dcf5cc80c8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "5db1426d-1779-421f-a926-1bfa1f4eb807",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "3edcbc75-36bb-4d2c-9be5-7c66104eed11",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5db1426d-1779-421f-a926-1bfa1f4eb807",
          "3edcbc75-36bb-4d2c-9be5-7c66104eed11"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "bccb1945-aa92-4849-91be-46b375d0263a",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "5182ae88-4ebc-4656-a941-9bf0080959a2",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "3a5a3300-264c-41f4-8358-30253cb497eb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "bee7df58-d9af-4b63-9ec3-59262e7080b7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "cf5940cd-1837-4e98-89ea-0e4349720cc5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "0f8cdc62-2c63-42af-b2dc-b2e54376a2c9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "e2c7f15b-a991-40a7-be98-cf91eb3ae24d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "e1058d9e-d412-4be0-9ac4-9271effd502b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3a5a3300-264c-41f4-8358-30253cb497eb",
          "bee7df58-d9af-4b63-9ec3-59262e7080b7",
          "cf5940cd-1837-4e98-89ea-0e4349720cc5",
          "0f8cdc62-2c63-42af-b2dc-b2e54376a2c9",
          "e2c7f15b-a991-40a7-be98-cf91eb3ae24d",
          "e1058d9e-d412-4be0-9ac4-9271effd502b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "953ce7e2-0059-434b-9c5e-8b8cfc0dd8b5",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "b5ba5cd1-fdb0-4234-bd5d-669b6a4886c9",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "6c9d12db-63a6-492c-86e2-583c9313ac68",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6c9d12db-63a6-492c-86e2-583c9313ac68"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "964b7ea5-3344-431e-84ba-f0b79425220c",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "402d9c40-007c-4db1-a36f-7df319358533",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "fbbc70c6-2d23-46f5-8453-95a4f8f1e057",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fbbc70c6-2d23-46f5-8453-95a4f8f1e057"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fb3a02a6-3b9b-4568-9b70-83a6e0b56b14",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "76190518-9c88-4231-b3d2-be01aa11c4a8",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c2cf2235-eb91-4568-a170-a1aef55eaa3e",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "5122429c-5919-4dc0-b0b7-9825c3eb5245",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5122429c-5919-4dc0-b0b7-9825c3eb5245"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "525d7fa5-5186-4f8b-b620-af5dcd8bed9d",
            "title": "",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [
              {
                "title": "\"before all\" hook",
                "fullTitle": "view/handlebars \"before all\" hook",
                "timedOut": false,
                "duration": 19,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "const\nCore = require('@superhero/core'),\ncore = new Core({ view:{} })\nawait core.bootstrap(\n{\n  [__dirname] :\n  {\n    path      : __dirname,\n    partials  : { layout : 'test/layout' },\n    helpers   : { if : true }\n  }\n})\nhtml = await view.compose(\n{\n  template  : 'test/template',\n  body      :\n  {\n    foo : 'foobar',\n    i   : 5\n  }\n})",
                "err": {},
                "isRoot": true,
                "uuid": "610b404e-1ed3-4940-8f4b-9fb4a5f52fbb",
                "isHook": true,
                "skipped": false
              }
            ],
            "afterHooks": [],
            "tests": [
              {
                "title": "possible to load template",
                "fullTitle": "view/handlebars possible to load template",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('loaded')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "16257e57-9e25-4f3f-8242-f807cafa0b8d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to read context variable",
                "fullTitle": "view/handlebars possible to read context variable",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('foobar')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "050f43bf-75a6-45ed-be8b-9f78121f8a99",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "possible to load a partial",
                "fullTitle": "view/handlebars possible to load a partial",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<head>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "f44e789e-c060-4f8d-9517-4eb7847a3083",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"==\"",
                "fullTitle": "view/handlebars if helper \"==\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('==')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "e2eb452f-06d4-489b-bc4a-3b695197b6ea",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"!=\"",
                "fullTitle": "view/handlebars if helper \"!=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('!=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "bd84ec20-75e5-4de4-9deb-f9da326a4bd4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<\"",
                "fullTitle": "view/handlebars if helper \"<\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "ca644037-bb62-489d-92dd-f2d8b719b277",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"<=\"",
                "fullTitle": "view/handlebars if helper \"<=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('<=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "4cf03a74-80b8-46bd-b871-1820ba84736c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">\"",
                "fullTitle": "view/handlebars if helper \">\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "2efc93cc-5dee-446c-9bb8-8612af11a334",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \">=\"",
                "fullTitle": "view/handlebars if helper \">=\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('>=')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "62d1dd00-aabc-4938-af18-c19e221721e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"&&\"",
                "fullTitle": "view/handlebars if helper \"&&\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('&&')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "86ec2307-d045-4fdb-a1d5-c8be0aa9a4ad",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"||\"",
                "fullTitle": "view/handlebars if helper \"||\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('||')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "2969aa1c-7b97-43e8-a930-39edbd765392",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "if helper \"typeof\"",
                "fullTitle": "view/handlebars if helper \"typeof\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(html.includes('typeof')).to.be.equal(true)",
                "err": {},
                "isRoot": true,
                "uuid": "c75c01c8-ec1e-4bb5-a0e5-4382e1fca34c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "16257e57-9e25-4f3f-8242-f807cafa0b8d",
              "050f43bf-75a6-45ed-be8b-9f78121f8a99",
              "f44e789e-c060-4f8d-9517-4eb7847a3083",
              "e2eb452f-06d4-489b-bc4a-3b695197b6ea",
              "bd84ec20-75e5-4de4-9deb-f9da326a4bd4",
              "ca644037-bb62-489d-92dd-f2d8b719b277",
              "4cf03a74-80b8-46bd-b871-1820ba84736c",
              "2efc93cc-5dee-446c-9bb8-8612af11a334",
              "62d1dd00-aabc-4938-af18-c19e221721e2",
              "86ec2307-d045-4fdb-a1d5-c8be0aa9a4ad",
              "2969aa1c-7b97-43e8-a930-39edbd765392",
              "c75c01c8-ec1e-4bb5-a0e5-4382e1fca34c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}