{
  "stats": {
    "suites": 12,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2018-08-14T10:35:54.420Z",
    "end": "2018-08-14T10:35:54.442Z",
    "duration": 22,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "88c938ec-cfb1-42c9-9dc1-079228cb6cf9",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "883a74cf-d2d3-46d5-811d-9b2b83616d73",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/calculate.test.js",
        "file": "/helper/calculate.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/calculate \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "calculate = require('./calculate')",
            "err": {},
            "isRoot": false,
            "uuid": "648c1beb-d774-4a95-9220-4fb9eb5a6edf",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "c047c177-3080-46df-8c49-be81004479d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "fe3dcbdb-324f-4da9-a55b-2dc3bc2d63b4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "fe6debbb-20ee-482e-9c73-d8ce47ae610e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "894a98e3-65ce-447d-b34c-08c28529419a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "9536aff9-ea4e-4d03-86a1-12c613899fd7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "0c155fe0-24f7-4922-bad8-a72aa63dc45f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c047c177-3080-46df-8c49-be81004479d1",
          "fe3dcbdb-324f-4da9-a55b-2dc3bc2d63b4",
          "fe6debbb-20ee-482e-9c73-d8ce47ae610e",
          "894a98e3-65ce-447d-b34c-08c28529419a",
          "9536aff9-ea4e-4d03-86a1-12c613899fd7",
          "0c155fe0-24f7-4922-bad8-a72aa63dc45f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f059ea98-5b57-4a98-b045-bd9931fc1370",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/concat.test.js",
        "file": "/helper/concat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/concat \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "concat = require('./concat')",
            "err": {},
            "isRoot": false,
            "uuid": "8a1380a7-b9e5-4fc1-9a6e-564e4c456539",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "77e706a2-20a4-488b-b81d-fbb0fbf89efa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "3e640422-f6ec-4d43-ab97-b00cdc098a0f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "77e706a2-20a4-488b-b81d-fbb0fbf89efa",
          "3e640422-f6ec-4d43-ab97-b00cdc098a0f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "25197584-9be3-4e83-a2eb-5788271355aa",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/dateformat.test.js",
        "file": "/helper/dateformat.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/dateformat \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "dateformat = require('./dateformat')",
            "err": {},
            "isRoot": false,
            "uuid": "46739496-d3d5-4676-b29a-9d79b6337ae6",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "20d4bcc2-b1de-47d2-ad96-abd2c6e589ad",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "20d4bcc2-b1de-47d2-ad96-abd2c6e589ad"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "5315b231-d696-4bb1-9f21-4d7e9fbf859b",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escDoubleQuote.test.js",
        "file": "/helper/escDoubleQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escDoubleQuote \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escDoubleQuote = require('./escDoubleQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "d08235dc-361e-45e0-8227-a573301ab708",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "a14e6948-b8ad-4b79-bcc1-60d9ab51f509",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a14e6948-b8ad-4b79-bcc1-60d9ab51f509"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ea2e76d3-2d0d-412d-a72a-2f7379b61d3b",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/escSingelQuote.test.js",
        "file": "/helper/escSingelQuote.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/escSingelQuote \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "escSingelQuote = require('./escSingelQuote')",
            "err": {},
            "isRoot": false,
            "uuid": "78172823-e4b0-4ba6-882a-ee2bb71a3dec",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "ff0c092d-76f7-4448-94dc-17bf8ea5967e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ff0c092d-76f7-4448-94dc-17bf8ea5967e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3f7b7f91-100f-4d5f-b597-6bdbd38d4b99",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/jsonStringify.test.js",
        "file": "/helper/jsonStringify.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/jsonStringify \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "jsonStringify = require('./jsonStringify')",
            "err": {},
            "isRoot": false,
            "uuid": "80cb84b8-631d-450a-98a3-5ad5f3b49c73",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "6a6e06dc-0ad3-44ed-a91e-d4fda8dbed2b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6a6e06dc-0ad3-44ed-a91e-d4fda8dbed2b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "19e52b77-a22f-4fec-93d3-3b4e3478fad2",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/stripTags.test.js",
        "file": "/helper/stripTags.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/stripTags \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "stripTags = require('./stripTags')",
            "err": {},
            "isRoot": false,
            "uuid": "43d87c42-2615-450b-8f6a-c45ec11e7f2f",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "8de86378-74ab-431c-8a29-4d9189c1f6d2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "36439a0a-12c1-43e6-a9dc-e888d63bf403",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8de86378-74ab-431c-8a29-4d9189c1f6d2",
          "36439a0a-12c1-43e6-a9dc-e888d63bf403"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "167ad4df-d042-43fd-b271-ffcdea212c86",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toFixed.test.js",
        "file": "/helper/toFixed.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toFixed \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toFixed = require('./toFixed')",
            "err": {},
            "isRoot": false,
            "uuid": "bbf36802-8d6f-472e-8b7b-d9d0404794e2",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "332c2df3-12d6-4be0-a503-83604708d8cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "f66d4c11-857d-4d7d-9f23-0fd7917abc8c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "eb12fd2e-d631-44f7-9fa2-04e4ebe28b5a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "192f53c3-8310-44a5-bcc8-f1eea99b1ec9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "908c539d-63cc-4ecd-b9ed-8aeb47d7d549",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "974b647f-1943-4984-9725-8852c0d29903",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "332c2df3-12d6-4be0-a503-83604708d8cb",
          "f66d4c11-857d-4d7d-9f23-0fd7917abc8c",
          "eb12fd2e-d631-44f7-9fa2-04e4ebe28b5a",
          "192f53c3-8310-44a5-bcc8-f1eea99b1ec9",
          "908c539d-63cc-4ecd-b9ed-8aeb47d7d549",
          "974b647f-1943-4984-9725-8852c0d29903"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f181f2d8-d901-4fb4-a44e-b890a17125cc",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toLowerCase.test.js",
        "file": "/helper/toLowerCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toLowerCase \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toLowerCase = require('./toLowerCase')",
            "err": {},
            "isRoot": false,
            "uuid": "329c6804-d1f6-4ec1-8bc3-62d1359ed4ed",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "70043212-b360-43ff-b5a6-be7d9f101ec5",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "70043212-b360-43ff-b5a6-be7d9f101ec5"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a03e52c4-147c-4efa-9e1d-5c5a65fd21f6",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/helper/toUpperCase.test.js",
        "file": "/helper/toUpperCase.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/template/helper/toUpperCase \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "toUpperCase = require('./toUpperCase')",
            "err": {},
            "isRoot": false,
            "uuid": "b42c01d7-e059-4c36-8f90-31dbeadb31fc",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "66e35590-ff7d-4f4a-8fa3-f7027dcd3d15",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "66e35590-ff7d-4f4a-8fa3-f7027dcd3d15"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "935a51e1-2778-430d-9785-f8571007a5d1",
        "title": "view/handlebars",
        "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
        "file": "/index.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "view/handlebars \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "View = require('.')\nview = new View",
            "err": {},
            "isRoot": false,
            "uuid": "ec99656c-a153-4184-8b09-450c3c516a81",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "22e59974-f547-460d-bc1f-c8071cb7d3a5",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core.handlebars/index.test.js",
            "file": "/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/handlebars static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(view.handlebars).to.be.equal(handlebars)",
                "err": {},
                "isRoot": false,
                "uuid": "57a53724-4d47-492f-b276-4a6621c20fe7",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "57a53724-4d47-492f-b276-4a6621c20fe7"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}